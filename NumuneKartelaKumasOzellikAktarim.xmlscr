<?xml version="1.0"?>
<ScriptDefinition xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Description="NumuneKartelaKumasOzellikAktarim" Enabled="true" Priority="0" ScriptName="NumuneKartelaKumasOzellikAktarim">
  <Events>
    <Event Enabled="true" ObjectName="InventoryEN" />
    <Event Enabled="true" EventName="ColumnChanged" FunctionName="OnColumnChanged" ObjectName="InventoryEN" />
  </Events>
  <Histories />
  <ScriptText>//Generated on 16.01.2024 16:48:43 NumuneKartelaKumasOzellikAktarim
/*
Numune kartında ve süreçlerinde kartela seçimi yapıldığında seçilen kartela kartının içerisinde bulunan Kumaş Özelliği ve Üretici Kodunu
Numunenin reçetesinde Kumaş Özelliği alanını Açıklamaya Üretici kodunu Cari hesap alanına getirmektedir.
*/

function OnColumnChanged(sender, e)
{
	if (BaseObject == null 
	|| BaseObject.CurrentRow == null 
	|| BaseObject.CurrentRow.Row == null
	|| BaseObject.CurrentRow.Row.IsNull("IsSample") 
	|| BaseObject.CurrentRow.Row.IsNull("InventoryType"))
		return null;
	
	if((BaseObject.CurrentRow.Row["IsSample"].ToString().Trim() == "True" &amp;&amp; BaseObject.CurrentRow.Row["InventoryType"].ToString().Trim() == "99") 
    || (BaseObject.CurrentRow.Row["IsSample"].ToString().Trim() == "True" &amp;&amp; BaseObject.CurrentRow.Row["InventoryType"].ToString().Trim() == "100") )
   	{
		if(BaseObject.Extensions.ContainsKey("InventoryRecipeAccessoryServiceExtension") 
		&amp;&amp; e.Row.Table.TableName == "MA_RecipeItem" 
		&amp;&amp; e.Column.ColumnName == "SwatchCardId" 
		&amp;&amp; !e.Row.IsNull("ItemType") &amp;&amp; Convert.ToInt16(e.Row["ItemType"]) == 1)
		{
			query = "select isnull(I.FComposition,\'\') [fcom] ,isnull(I.CurrentAccountId,0) [ca] from IM_Item I with (nolock) where I.RecId=\'"+e.Row["SwatchCardId"].ToString()+"\'";
		 	dt = UtilityFunctions.GetDataTableList(BaseObject.Provider, BaseObject.Connection, BaseObject.Transaction, "dt",query);
				if(dt == null || dt.Rows.Count &lt;= 0)
					return null;
					
			fcom_ = dt.Rows[0]["fcom"].ToString();
			ca_ = Convert.ToInt32(dt.Rows[0]["ca"]);
			 drs = BaseObject.Extensions["InventoryRecipeServiceExtension"].RecipeTable.Select("OriginalRowId = " + e.Row["RecId"].ToString());
		
			if(drs != null &amp;&amp; drs.Length &gt; 0)
			{
				drs[0].SetField&lt;|string|&gt;("Explanation",fcom_.ToString()); 
				e.Row.SetField&lt;|string|&gt;("Explanation",fcom_.ToString()); 
				drs[0].SetField&lt;|int|&gt;("CurrentAccountId",Convert.ToInt32(ca_)); 
				e.Row.SetField&lt;|int|&gt;("CurrentAccountId",Convert.ToInt32(ca_)); 
					
			}
		}
	}
}</ScriptText>
</ScriptDefinition>