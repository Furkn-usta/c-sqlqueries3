<?xml version="1.0"?>
<ScriptDefinition xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Description="ModelKodu7HaneSınırlama" Enabled="true" Priority="0" ScriptName="ModelKodu7HaneSınırlama">
  <Events>
    <Event Enabled="true" ObjectName="InventoryEN" />
    <Event Enabled="true" EventName="BeforePost" FunctionName="OnBeforePost" ObjectName="InventoryEN" />
    <Event Enabled="true" ObjectName="InventoryEN" />
    <Event Enabled="true" EventName="BeforePost" FunctionName="OnnBeforePost" ObjectName="InventoryEN" />
    <Event Enabled="true" ObjectName="InventoryEN" />
    <Event Enabled="true" EventName="BeforePost" FunctionName="OnnnBeforePost" ObjectName="InventoryEN" />
  </Events>
  <Histories />
  <ScriptText>//Generated on 10.11.2022 8:52:20

function OnBeforePost(sender, ev)
{  
metin=BaseObject.CurrentRow.Row["InventoryCode"].ToString().Trim();
counter=0;
sayac=0;

seslii="İ";
sesli_i="ı";

seslig="Ğ";
sesli_g="ğ";

sesliu="Ü";
sesli_u="ü";

seslis="Ş";
sesli_s="ş";

seslio="Ö";
sesli_o="ö";

seslic="Ç";
sesli_c="ç";

lock=false;


	if(BaseObject != null &amp;&amp; BaseObject.CurrentRow != null &amp;&amp; BaseObject.CurrentRow.Row != null &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["InventoryType"]) == 100 &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["CurrentAccountId"])==9 )
		{
	for (counter = 0; counter &lt; metin.Length; counter++)
			{
     
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslii)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_i) )sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslig)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_g)) sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesliu)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_u)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslis)) sayac += 1;     
  	  if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_s)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslio) )sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_o)) sayac += 1;
             
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslic)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesli_c)) sayac += 1;
        
			}
				if(sayac&gt;0) 
   				lock=true;
   			if(lock)
   			{
   			
   			sender.ShowMessage("Model Kartında Kodu Kısmında Türkçe Karakter Kullanılamaz Dikkat..! {scr TürkçeKarakterEngelleme}");
   			ev.Cancel=true;
    		return null;  
   			}  
   			
		
		
		}
		
}


function OnnBeforePost(sender, ev)
{  
metin=BaseObject.CurrentRow.Row["InventoryCode"].ToString().Trim();
counter=0;
sayac=0;


lock=false;

	if(BaseObject != null &amp;&amp; BaseObject.CurrentRow != null &amp;&amp; BaseObject.CurrentRow.Row != null &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["InventoryType"]) == 100 &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["CurrentAccountId"])==9 )
		{
	for (counter = 0; counter &lt; metin.Length; counter++)
			{
     		sayac++;
			}
				if(sayac&gt;7||sayac&lt;7) 
   				lock=true;
   			if(lock)
   			{
   			
   			sender.ShowMessage("Model Kartındaki Kodu Kısmında 7 hane kullanılabilir..!");
   			ev.Cancel=true;
    		return null;  
   			}  
   			
		
		
		}
		
}

function OnnnBeforePost(sender, ev)
{  
metin=BaseObject.CurrentRow.Row["InventoryCode"].ToString().Trim();
counter=0;
sayac=0;

a="A";
b="B";
c="C";
d="D";
e="E";
f="F";
g="G";
h="H";
i="I";
j="J";
k="K";
l="L";
m="M";
n="N";
o="O";
p="P";
q="Q";
r="R";
s="S";
t="T";
u="U";
v="V";
w="W";
xx="X";
yy="Y";
z="Z";
seslii="İ";
seslig="Ğ";
sesliu="Ü";
seslis="Ş";
seslio="Ö";
seslic="Ç";


lock=false;

	if(BaseObject != null &amp;&amp; BaseObject.CurrentRow != null &amp;&amp; BaseObject.CurrentRow.Row != null &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["InventoryType"]) == 100 &amp;&amp; Convert.ToInt32(BaseObject.CurrentRow.Row["CurrentAccountId"])==9)
		{
	for (counter = 0; counter &lt; metin.Length; counter++)
			{
     
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(a)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(b) )sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(c)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(d)) sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(e)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(f)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(g)) sayac += 1;     
  	  if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(h)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(i) )sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(j)) sayac += 1;
             
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(k)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(l)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(m)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(n) )sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(o)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(p)) sayac += 1;
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(q)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(r)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(s)) sayac += 1;     
  	  if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(t)) sayac += 1;
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(u) )sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(v)) sayac += 1;
             
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(w)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(xx)) sayac += 1;  
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(yy)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(z)) sayac += 1; 
       
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslii) )sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslig)) sayac += 1;
             
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(sesliu)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslis)) sayac += 1;  
      
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslio)) sayac += 1;
      if (Convert.ToChar(metin.Substring(counter, 1)) == Convert.ToChar(seslic)) sayac += 1; 
       
       
       
			}
				if(sayac!=metin.Length) 
   				lock=true;
   			if(lock)
   			{
   			
   			sender.ShowMessage("Model Kartında Sadece Büyük Harf Kullanılabilir..! {scr TürkçeKarakterEngelleme}");
   			ev.Cancel=true;
    		return null;  
   			}  
   			
		
		
		}
		
}


</ScriptText>
</ScriptDefinition>