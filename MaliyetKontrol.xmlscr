<?xml version="1.0"?>
<ScriptDefinition xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Description="MaliyetKontrolMailsiz" Enabled="true" Priority="0" ScriptName="MaliyetKontroMailsiz">
  <Events>
    <Event Enabled="true" ObjectName="OrderReceiptEN" />
    <Event Enabled="true" EventName="BeforePost" FunctionName="OnBeforePost" ObjectName="OrderReceiptEN" />
    <Event Enabled="true" ObjectName="ContractEN" />
    <Event Enabled="true" EventName="BeforePost" FunctionName="OnBeforePost" ObjectName="ContractEN" />
  </Events>
  <Histories />
  <ScriptText>//Generated on 26.04.2022 10:41:04
/*
function sendMail(ri_row, dt_row)
{
	if(BaseObject.CurrentRow.Row.HasVersion(DataRowVersion.Original) &amp;&amp; BaseObject.CurrentRow.Row["IsApproved", DataRowVersion.Original] != BaseObject.CurrentRow.Row["IsApproved", DataRowVersion.Current])
		return null;

	if(ri_row.HasVersion(DataRowVersion.Original) &amp;&amp; ri_row["UnitPrice", DataRowVersion.Original] == ri_row["UnitPrice", DataRowVersion.Current] &amp;&amp; ri_row["ForexUnitPrice", DataRowVersion.Original] == ri_row["ForexUnitPrice", DataRowVersion.Current])
		return null; 

    BaseObject.CurrentRow.Row.SetField&lt;|Int16|&gt;("IsApproved", 0);

	sb = new StringBuilder();

    sb.AppendLine("&lt;html&gt;&lt;br&gt;Maliyet No: " + dt_row["InitialCostCode"].ToString());
    sb.AppendLine("&lt;html&gt;&lt;br&gt;Order No: " + dt_row["orderno"].ToString());
	sb.AppendLine("&lt;br&gt;Model Adı &amp; Kodu: " + dt_row["model"].ToString());
    sb.AppendLine("&lt;br&gt;Müşteri Order No: " + dt_row["CustomerOrderNo"].ToString());	 
	sb.AppendLine("&lt;br&gt;Müşteri Model Kodu: " + dt_row["ProducerInventoryCode"].ToString());
    
    if(BaseObject.Name == "OrderReceiptEN")
    {
	    sb.AppendLine("&lt;br&gt;Sipariş Fiş No: " + BaseObject.CurrentRow.Row["ReceiptNo"].ToString());
	    sb.AppendLine("&lt;br&gt;Malzeme Kodu: " + ri_row["InventoryCode"].ToString());
	    sb.AppendLine("&lt;br&gt;Malzeme Adı: " + ri_row["InventoryName"].ToString());
    }else{
	    sb.AppendLine("&lt;br&gt;Sözleşme Fiş No: " + BaseObject.CurrentRow.Row["ReceiptNo"].ToString());
	    sb.AppendLine("&lt;br&gt;Hizmet Kodu: " + ri_row["ServiceCode"].ToString());
	    sb.AppendLine("&lt;br&gt;Hizmet Adı: " + ri_row["ServiceName"].ToString());
    }
	sb.AppendLine("&lt;br&gt;Birim Fiyat: " + ri_row["UnitPrice"].ToString());
	sb.AppendLine("&lt;br&gt;Döviz Birim Fiyat: " + ri_row["ForexUnitPrice"].ToString());
	sb.AppendLine("&lt;br&gt;Maliyet Birim Fiyat: " + dt_row["UnitPrice"].ToString());
	sb.AppendLine("&lt;br&gt;Maliyet Döviz Birim Fiyat: " + dt_row["ForexUnitPrice"].ToString());
	sb.AppendLine("&lt;/html&gt;");

    tms = BaseObject.Container.Resolve&lt;|TaskMessageService|&gt;("TaskMessageService");
	tms.SendEmail("MAİLADRESİ.com", "Maliyet Aşımı Uyarı Maili", sb.ToString());
}
*/
function OnBeforePost(sender, ev)
{
    if(BaseObject == null || BaseObject.CurrentRow == null || BaseObject.CurrentRow.Row == null || BaseObject.CurrentRow.Row.RowState == DataRowState.Deleted || BaseObject.CurrentRow.Row.RowState == DataRowState.Detached)
        return null;

    if(BaseObject.Name == "OrderReceiptEN"
       &amp;&amp; !BaseObject.CurrentRow.Row.IsNull("ReceiptType")
	   &amp;&amp; Convert.ToInt16(BaseObject.CurrentRow.Row["ReceiptType"])== 1)
       {
            foreach(dr in BaseObject.Data.Tables["IM_OrderReceiptItem"].Select("InventoryId is not null and isnull(UnitPrice,0)&gt;0"))
		    {
		        if(dr.RowState!=DataRowState.Deleted &amp;&amp; dr.RowState!=DataRowState.Detached &amp;&amp; (dr.RowState==DataRowState.Added || dr.RowState==DataRowState.Modified))
		        {
			         itemdt= UtilityFunctions.GetDataTableList(BaseObject.Provider, BaseObject.Connection, BaseObject.Transaction, "itemdt", "select isnull(UD_Kosul,\'\') kosul from IM_Item with(nolock) where RecId=" + dr["InventoryId"].ToString());
			  		 if(itemdt!=null &amp;&amp; itemdt.Rows.Count&gt;0 &amp;&amp; itemdt.Rows[0]["kosul"].ToString()=="GENEL AKSESUAR")
			  		 	continue;
		        		
		            l_row_unit_price = Convert.ToDecimal(dr["UnitPrice"]);
		            l_row_forex_id = 0;
	  		        if(!dr.IsNull("ForexId") &amp;&amp; Convert.ToInt32(dr["ForexId"])&gt;0)
	  		            l_row_forex_id = Convert.ToInt32(dr["ForexId"]);
	  		        l_row_forex_unit_price = 0m;
			  		if(!dr.IsNull("ForexUnitPrice") &amp;&amp; Convert.ToDecimal(dr["ForexUnitPrice"])&gt;0m)
			  		    l_row_forex_unit_price = Convert.ToDecimal(dr["ForexUnitPrice"]);

					l_woi = dr["WorkOrderReceiptItemId"].ToString();
					if(l_woi == "")
					{
						ia_row = BaseObject.Data.Tables["IM_ItemAllocation"].Select("InventoryId is not null and WorkOrderItemId is not null and OrderReceiptItemId = "+dr["RecId"].ToString()).FirstOrDefault&lt;|DataRow|&gt;();
						if(ia_row != null)
							l_woi = ia_row["WorkOrderItemId"].ToString();
					} 
		                    l_str = " select isnull(item.UD_Kosul,\'\') [kosul], w.WorkOrderNo [orderno], item.InventoryCode + \'-\' + item.InventoryName [model], w.CustomerOrderNo, item.ProducerInventoryCode, icost.InitialCostCode,";
							l_str += " isnull(ic.UnitPrice,0) UnitPrice ,isnull(ic.ForexUnitPrice,0) ForexUnitPrice,isnull(ic.ForexId,0) ForexId ";
							l_str += " from  MA_WorkOrder w with (nolock) ";
                            l_str += " left join MA_WorkOrderItem wi with (nolock) on w.RecId = wi.WorkOrderId and wi.WorkOrderSubType=1 ";
							l_str += " left join MA_InitialCostItem ic with (nolock) on ic.InitialCostId = w.InitialCostId ";
                            l_str += " left join MA_InitialCost icost with (nolock) on icost.RecId = ic.InitialCostId ";
							l_str += " left join IM_Item item with (nolock) on item.RecId = w.InventoryId";
							l_str += " where (ic.UnitPrice&gt;0 or ic.ForexUnitPrice&gt;0) and ic.InventoryId="+dr["InventoryId"].ToString()+" and wi.RecId = "+l_woi;

			  		        dt= UtilityFunctions.GetDataTableList(BaseObject.Provider, BaseObject.Connection, BaseObject.Transaction, "dt", l_str);
			  		        if(dt!=null &amp;&amp; dt.Rows.Count&gt;0)
			  		        {
			  		        	l_cost_unit_price = 0m;0m;
				  		        if(!dt.Rows[0].IsNull("UnitPrice") &amp;&amp; Convert.ToDecimal(dt.Rows[0]["UnitPrice"])&gt;0m)
				  		             l_cost_unit_price = Convert.ToDecimal(dt.Rows[0]["UnitPrice"]);

				  		        l_cost_forex_id = 0;
				  		        if(!dt.Rows[0].IsNull("ForexId") &amp;&amp; Convert.ToInt32(dt.Rows[0]["ForexId"])&gt;0)
				  		             l_cost_forex_id = Convert.ToInt32(dt.Rows[0]["ForexId"]);

				  		        l_cost_forex_unit_price = 0m;
				  		        if(!dt.Rows[0].IsNull("ForexUnitPrice") &amp;&amp; Convert.ToDecimal(dt.Rows[0]["ForexUnitPrice"])&gt;0m)
				  		             l_cost_forex_unit_price = Convert.ToDecimal(dt.Rows[0]["ForexUnitPrice"]);

				  		        if(l_cost_forex_id&gt;0 &amp;&amp; l_row_forex_id ==0 )
				  		        {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırına bağlı Order\'ın Ön Maliyetinde malzemede döviz seçili ancak sipariş satırında döviz yok!Lütfen kontrol ediniz.{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	            ev.Cancel=true;
				      	            return null;
				  	            }
				  	            else if(l_cost_forex_id&gt;0 &amp;&amp; l_row_forex_id&gt;0  &amp;&amp;  l_cost_forex_id == l_row_forex_id &amp;&amp;  l_row_forex_unit_price &gt; l_cost_forex_unit_price)
				  	            {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+". satırın döviz birim fiyatı Ön Maliyet döviz birim fiyatından büyük.Lütfen kontrol ediniz!{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	           // sendMail(dr,dt.Rows[0]);
				      	            return null;
				  	            }
					            else if(l_cost_forex_id == 0  &amp;&amp; l_row_unit_price &gt; l_cost_unit_price)
					            {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırın birim fiyatı Ön Maliyet birim fiyatından büyük.Lütfen kontrol ediniz!{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	           // sendMail(dr,dt.Rows[0]);
				      	            return null;
				  	            }
		  	                }else
		  	                {
				  	        	BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırına bağlı Order\'ın Ön Maliyeti yok! Lütfen kontrol ediniz.{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	        ev.Cancel=true;
				      	        return null;
		  	                }
		        }
	        }
       }
       else if(BaseObject.Name == "ContractEN")
       {
           foreach( dr in BaseObject.Data.Tables["SM_ContractItem"].Select("isnull(WorkOrderReceiptItemId,0)&gt;0 and isnull(UnitPrice,0)&gt;0") )
           {
                if(dr.RowState != DataRowState.Deleted &amp;&amp; dr.RowState != DataRowState.Detached &amp;&amp; (dr.RowState == DataRowState.Added || dr.RowState == DataRowState.Modified))
		        {
                            l_row_unit_price = Convert.ToDecimal(dr["UnitPrice"]);
                            l_row_forex_id = 0;
                            if(!dr.IsNull("ForexId") &amp;&amp; Convert.ToInt32(dr["ForexId"])&gt;0)
                                l_row_forex_id = Convert.ToInt32(dr["ForexId"]);
                            l_row_forex_unit_price = 0m;
                            if(!dr.IsNull("ForexUnitPrice") &amp;&amp; Convert.ToDecimal(dr["ForexUnitPrice"])&gt;0m)
                                l_row_forex_unit_price = Convert.ToDecimal(dr["ForexUnitPrice"]);

                            l_str = " select isnull(item.UD_Kosul,\'\') [kosul], w.WorkOrderNo [orderno], item.InventoryCode + \'-\' + item.InventoryName [model], w.CustomerOrderNo, item.ProducerInventoryCode, icost.InitialCostCode,";
							l_str += " isnull(ic.UnitPrice,0) UnitPrice ,isnull(ic.ForexUnitPrice,0) ForexUnitPrice,isnull(ic.ForexId,0) ForexId ";
							l_str += " from  MA_WorkOrder w with (nolock) ";
                            l_str += " left join MA_WorkOrderItem wi with (nolock) on w.RecId = wi.WorkOrderId and wi.WorkOrderSubType=1 ";
							l_str += " left join MA_InitialCostItem ic with (nolock) on ic.InitialCostId = w.InitialCostId ";
							l_str += " left join MA_InitialCost icost with (nolock) on icost.RecId = ic.InitialCostId ";
							l_str += " left join MA_InitialCostCard icc with(nolock) on icc.RecId = ic.InitialCostCardId ";
							l_str += " left join IM_Item item with (nolock) on item.RecId = w.InventoryId";
							l_str += " left join MA_Process prc with(nolock) on prc.RecId = icc.ProcessId";
							l_str += " where (ic.UnitPrice&gt;0 or ic.ForexUnitPrice&gt;0) and prc.ServiceId="+dr["ServiceCardId"].ToString()+" and wi.RecId = "+dr["WorkOrderReceiptItemId"].ToString();
			  		        dt= UtilityFunctions.GetDataTableList(BaseObject.Provider, BaseObject.Connection, BaseObject.Transaction, "dt", l_str);
			  		        if(dt!=null &amp;&amp; dt.Rows.Count&gt;0)
			  		        { 
			  		        	l_cost_unit_price = 0m;0m;
				  		        if(!dt.Rows[0].IsNull("UnitPrice") &amp;&amp; Convert.ToDecimal(dt.Rows[0]["UnitPrice"])&gt;0m)
				  		             l_cost_unit_price = Convert.ToDecimal(dt.Rows[0]["UnitPrice"]);

				  		        l_cost_forex_id = 0;
				  		        if(!dt.Rows[0].IsNull("ForexId") &amp;&amp; Convert.ToInt32(dt.Rows[0]["ForexId"])&gt;0)
				  		             l_cost_forex_id = Convert.ToInt32(dt.Rows[0]["ForexId"]);

				  		        l_cost_forex_unit_price = 0m;
				  		        if(!dt.Rows[0].IsNull("ForexUnitPrice") &amp;&amp; Convert.ToDecimal(dt.Rows[0]["ForexUnitPrice"])&gt;0m)
				  		             l_cost_forex_unit_price = Convert.ToDecimal(dt.Rows[0]["ForexUnitPrice"]);

				  		        if(l_cost_forex_id&gt;0 &amp;&amp; l_row_forex_id ==0 )
				  		        {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırına bağlı Order\'ın Ön Maliyetinde malzemede döviz seçili ancak sipariş satırında döviz yok!Lütfen kontrol ediniz.{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	            ev.Cancel=true;
				      	            return null;
				  	            }
				  	            else if(l_cost_forex_id&gt;0 &amp;&amp; l_row_forex_id&gt;0  &amp;&amp;  l_cost_forex_id == l_row_forex_id &amp;&amp;  l_row_forex_unit_price &gt; l_cost_forex_unit_price)
				  	            {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+". satırın döviz birim fiyatı Ön Maliyet döviz birim fiyatından büyük.Lütfen kontrol ediniz!{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	          //  sendMail(dr,dt.Rows[0]);
				      	            return null;
				  	            }
					            else if(l_cost_forex_id == 0  &amp;&amp; l_row_unit_price &gt; l_cost_unit_price)
					            {
				  	                BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırın birim fiyatı Ön Maliyet birim fiyatından büyük.Lütfen kontrol ediniz!{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	            //sendMail(dr,dt.Rows[0]);
				      	            return null;
				  	            }
		  	                }else
		  	                {
				  	        	BaseObject.ShowMessage(dr["ItemOrderNo"].ToString()+ ". satırına bağlı Order\'ın Ön Maliyeti yok! Lütfen kontrol ediniz.{SCR:ÖnMaliyetFiyatKontrol}","Dikkat!");
				     	        ev.Cancel=true;
				      	        return null;
		  	                }
                }
           }
       }
}</ScriptText>
</ScriptDefinition>